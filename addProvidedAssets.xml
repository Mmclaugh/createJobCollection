<!--
  ~ Levels Beyond CONFIDENTIAL
  ~
  ~ Copyright 2003 - 2016 Levels Beyond Incorporated
  ~ All Rights Reserved.
  ~
  ~ NOTICE:  All information contained herein is, and remains
  ~ the property of Levels Beyond Incorporated and its suppliers,
  ~ if any.  The intellectual and technical concepts contained
  ~ herein are proprietary to Levels Beyond Incorporated
  ~ and its suppliers and may be covered by U.S. and Foreign Patents,
  ~ patents in process, and are protected by trade secret or copyright law.
  ~ Dissemination of this information or reproduction of this material
  ~ is unlawful and strictly forbidden unless prior written permission is obtained
  ~ from Levels Beyond Incorporated.
  -->

<workflow xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns="http://levelsbeyond.com/schema/workflow"
    xsi:schemaLocation="http://levelsbeyond.com/schema/workflow http://www.levelsbeyond.com/schema/latest/studio.xsd"
    id="addProvidedAssets"
    name="Add Provided Assets"
    description=""
    
    executionLabelExpression="ID: addProvidedAssets | Name: Add Provided Assets | Adding provided assets to collection ${collection}"
    deadlineExpression=""
    subjectDOClassName=""
    showInUserInterface="true"
    
    
    sdkVersion="5.4">
    
    <initialStepName>check if collection exists</initialStepName>
    
    
    
    <!-- ............................................. Handling Collection ............................................. -->
    <!-- Check if collection exists -->
    <queryStep name="check if collection exists" 
        executionLabelExpression="Checking if the collection, ${collection}, exists already"
        targetDataObjectClass="AssetCollection" 
        resultDataDef="collectionObject">
        <transition condition="${collectionObject != null}">
            <targetStepName>add provided assets</targetStepName>
        </transition>
        <transition condition="${true}">
            <targetStepName>create collection</targetStepName>
        </transition>
        <criteria>
            <![CDATA[
                <criteria>
                <and>
                    <condition property="name" op="eq">
                        <test value="${collection}" />
                    </condition>
                </and>
            </criteria>
            ]]>
        </criteria>
    </queryStep>
    
    
    
    <!-- Create Collection -->
    <saveDataObjectStep name="create collection"
        targetDataObjectClass="AssetCollection"
        resultDataDef="collectionObject"
        executionLabelExpression="Creating collection: ${collection}"
        nextStep="add provided assets"
        >
        
        <property name="name">${collection}</property>
    </saveDataObjectStep>
    
    
    
    
    
    
    
    <!-- ................................................ Create Assets ................................................ -->
    <!-- Subflow -->
    <executeSubflowStep name="add provided assets"
        executionLabelExpression="Adding ${nameArray.size()} number of assets"
        targetWorkflowId="addAssetToCollectionForJob"
        subjectChangePath="${nameArray}"
        subflowTargetDataDef="assetName"
        nextStep="end">
        
        <subflowContextDataMapping parentDataDef="collectionObject" subflowDataDef="collection"/>
        <subflowContextDataMapping parentDataDef="job" subflowDataDef="job"/>
        <subflowContextDataMapping parentDataDef="providedOrDeliverable" subflowDataDef="providedOrDeliverable"/>
    </executeSubflowStep>
    
    
    
    
    
    <!-- .................................................... End Step ................................................. -->
    <noopStep name="end"/>
    
    
    
    
    
    
    <!-- .............................................. Context Data Defs .............................................. -->
    <!-- User Input -->
    <contextDataDef name="collection"   label="Collection"                          dataType="String"   userInput="true" required="true"/>    
    <contextDataDef name="nameArray" dataType="String" multiple="true"/>
    
    
    
    <!-- Default Values -->
    <contextDataDef name="providedOrDeliverable"                                    dataType="String"                    defaultDataExpression="Provided"/>
    <contextDataDef name="job"                                                      dataType="Boolean"      defaultDataExpression="false"/>
    
    
    
    <!-- Processing Data Defs -->
    <contextDataDef name="collectionObject" dataType="Data Object"/>
    
</workflow>